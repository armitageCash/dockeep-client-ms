on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ secrets.AWS_REGION }}

    - name: Build Docker image
      run: |
        docker build -t dockeep-clients-ms .
        docker tag dockeep-clients-ms:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

    - name: Authenticate to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

    - name: Create Amazon ECS Cluster
      run: |
        # Nombre del clúster ECS
        cluster_name="dockeep-clients-ms-cluster"

        # Verifica si el clúster existe
        if ! aws ecs describe-clusters --cluster ${{cluster_name}}; then
          # Crea el clúster si no existe
          aws ecs create-cluster --cluster-name ${{cluster_name}}
        fi

    - name: Create Task Definition
      run: |
        # Nombre de la definición de tarea ECS
        task_definition_name="dockeep-clients-ms-task"

        # Nombre del archivo de definición de tarea (debes crear este archivo)
        task_definition_file="task-definition.json" # Cambia a tu archivo de definición de tarea

        # Crea o actualiza la definición de tarea
        aws ecs register-task-definition --cli-input-json file://$task_definition_file

    - name: Deploy to AWS ECS
      run: |
        aws ecs update-service --cluster ${{cluster_name}} --service dockeep-clients-ms --force-new-deployment

    - name: Deploy CloudFormation Stack
      run: |
        # Nombre de la pila CloudFormation
        stack_name="dockeep-clients-ms-stack"

        # Nombre del archivo de plantilla CloudFormation (debes crear este archivo)
        template_file="template.yml"

        # Parámetros opcionales para la pila (si es necesario)
        parameters="--parameters ParameterKey=KeyName,ParameterValue=my-key"

        # Crea o actualiza la pila de CloudFormation
        aws cloudformation deploy \
          --stack-name $stack_name \
          --template-file $template_file \
          --parameter-overrides $parameters \
          --capabilities CAPABILITY_IAM

        # Espera hasta que la pila se complete
        aws cloudformation wait stack-create-complete --stack-name $stack_name

        # Obtiene la URL de consumo de la API de CloudFormation (deberías definirla en tu plantilla)
        api_url=$(aws cloudformation describe-stacks --stack-name $stack_name --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' --output text)

        echo "URL de la API: $api_url"

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}