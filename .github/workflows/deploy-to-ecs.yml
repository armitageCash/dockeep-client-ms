name: Deploy to ECS Fargate

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_SERVICE: dockeep-clients-ms-service
  ECS_CLUSTER: dockeep-clients-ms-cluster
  ECS_TASK_DEFINITION: dockeep-clients-ms-task-definition
  CONTAINER_NAME: dockeep-clients-ms-container

jobs:
  create-docker-image:
    name: Build docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login into AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Create and add tags to docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    name: Upload image to AWS ECR
    runs-on: ubuntu-latest
    needs: create-docker-image
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --task-definition ${{ env.ECS_TASK_DEFINITION }} --force-new-deployment

  integrate-openapi:
    name: Integrate OpenAPI
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Set ECS ELB Endpoint
        run: |
          echo "ECS_ELB_ENDPOINT=http://dockeep-clients-ms-elb-1163464849.us-east-2.elb.amazonaws.com/" >> $GITHUB_ENV
      - name: Run Deploy to ECS Fargate script
        run: |
          # Cambia la ruta al script Bash
          bash path/to/your/deploy-to-ecs-fargate.sh    
      - name: Run Deploy to ECS Fargate script
        run: |
          # Cambia la ruta al script Bash
          bash deploy-openapi-to-apigateway.sh
      - name: Create or Update API Gateway
        run: |
          aws apigateway create-or-update-api --rest-api-id ${{ env.API_ID }} --mode merge --fail-on-warnings

      - name: Create Deployment
        run: |
          aws apigateway create-deployment --rest-api-id ${{ env.API_ID }} --stage-name production --description despliegue-dockeep-clients-ms
